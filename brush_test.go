package patterns

import (
//"io/ioutil"
//"strings"
//"testing"
)

func ExampleBrushLine() {
	b := Brush{LineBrush:LineBrush{2*unitX, unitY}, Relative: true}
	Output(b.Line(0, 0, 10*unitX, -10*unitX))
	/* Output:
Graph
      -15	--------------------------------
      -14	--------------------------------
      -13	--------------------------------
      -12	--------------------------------
      -11	--------------------------------
      -10	--------------------------------
       -9	-------------------------XX-----
       -8	------------------------XXX-----
       -7	-----------------------XXX------
       -6	----------------------XXX-------
       -5	---------------------XXX--------
       -4	--------------------XXX---------
       -3	-------------------XXX----------
       -2	------------------XXX-----------
       -1	-----------------XXX------------
        0	----------------XXX-------------
        0	----------------XX--------------
        1	--------------------------------
        2	--------------------------------
        3	--------------------------------
        4	--------------------------------
        5	--------------------------------
        6	--------------------------------
        7	--------------------------------
        8	--------------------------------
        9	--------------------------------
       10	--------------------------------
       11	--------------------------------
       12	--------------------------------
       13	--------------------------------
       14	--------------------------------
       15	--------------------------------
	*/
}

func ExampleBrushLineNonZeroStart() {
	b := Brush{LineBrush:LineBrush{2*unitX, unitY}, Relative: true}
	Output(b.Line(5*unitX, -5*unitX, -10*unitX, 10*unitX))
	/* Output:
Graph
      -18	-------------------------------------
      -17	-------------------------------------
      -16	-------------------------------------
      -15	-------------------------------------
      -14	-------------------------------------
      -13	-------------------------------------
      -12	-------------------------------------
      -11	-------------------------------------
      -10	-------------------------------------
       -9	-------------------------------------
       -8	-------------------------------------
       -7	-------------------------------------
       -6	-------------------------------------
       -5	-----------------------X-------------
       -4	----------------------XXX------------
       -3	---------------------XXX-------------
       -2	--------------------XXX--------------
       -1	-------------------XXX---------------
        0	------------------XXX----------------
        0	-----------------XXX-----------------
        1	----------------XXX------------------
        2	---------------XXX-------------------
        3	--------------XXX--------------------
        4	-------------XXX---------------------
        5	------------XXX----------------------
        6	-----------XXX-----------------------
        7	----------XXX------------------------
        8	---------XXX-------------------------
        9	--------XXX--------------------------
       10	---------X---------------------------
       11	-------------------------------------
       12	-------------------------------------
       13	-------------------------------------
       14	-------------------------------------
       15	-------------------------------------
       16	-------------------------------------
       17	-------------------------------------
	*/
}


func ExampleBrushLineCross() {
	b := Brush{LineBrush:LineBrush{2*unitX, unitY}, Relative: true}
	Output(
		Limiter{
			Composite{
				b.Line(-5*unitX,0, -15*unitX, 0),
				b.Line(5*unitX,0, 15*unitX, 0),
				b.Line(0,-5*unitX,0, -15*unitX),
				b.Line(0,5*unitX,0, 15*unitX),
			},
			20*unitX,
		},
	)
	/* Output:
Graph
      -18	-------------------------------------
      -17	-------------------------------------
      -16	-------------------------------------
      -15	-------------------------------------
      -14	-------------------------------------
      -13	-------------------------------------
      -12	-------------------------------------
      -11	-------------------------------------
      -10	-------------------------------------
       -9	-------------------------------------
       -8	-------------------------------------
       -7	-------------------------------------
       -6	-------------------------------------
       -5	-----------------------X-------------
       -4	----------------------XXX------------
       -3	---------------------XXX-------------
       -2	--------------------XXX--------------
       -1	-------------------XXX---------------
        0	------------------XXX----------------
        0	-----------------XXX-----------------
        1	----------------XXX------------------
        2	---------------XXX-------------------
        3	--------------XXX--------------------
        4	-------------XXX---------------------
        5	------------XXX----------------------
        6	-----------XXX-----------------------
        7	----------XXX------------------------
        8	---------XXX-------------------------
        9	--------XXX--------------------------
       10	---------X---------------------------
       11	-------------------------------------
       12	-------------------------------------
       13	-------------------------------------
       14	-------------------------------------
       15	-------------------------------------
       16	-------------------------------------
       17	-------------------------------------
	*/
}



func ExampleBrushPolygon() {
	b := Brush{LineBrush:LineBrush{2.1*unitX, unitY}, Relative: true}
	p := b.Polygon([2]x{0, 0}, [2]x{7*unitX, -7*unitX},[2]x{-10*unitX, 0})
	Output(Limiter{p,10*unitX})
	/* Output:
Graph
      -15	--------------------------------
      -14	--------------------------------
      -13	--------------------------------
      -12	--------------------------------
      -11	--------------------------------
      -10	--------------------------------
       -9	-------------------------XX-----
       -8	------------------------XXX-----
       -7	-----------------------XXX------
       -6	----------------------XXX-------
       -5	---------------------XXX--------
       -4	--------------------XXX---------
       -3	-------------------XXX----------
       -2	------------------XXX-----------
       -1	-----------------XXX------------
        0	----------------XXX-------------
        0	----------------XX--------------
        1	--------------------------------
        2	--------------------------------
        3	--------------------------------
        4	--------------------------------
        5	--------------------------------
        6	--------------------------------
        7	--------------------------------
        8	--------------------------------
        9	--------------------------------
       10	--------------------------------
       11	--------------------------------
       12	--------------------------------
       13	--------------------------------
       14	--------------------------------
       15	--------------------------------
	*/
}

func ExampleBrushQuadraticBezier() {
	b := Brush{LineBrush:LineBrush{2.1*unitX, unitY}, Relative: true}
	p := b.QuadraticBezier(0,0,7*unitX,-7*unitX,-10*unitX,0)
	Output(Limiter{p,10*unitX})
	/* Output:
Graph
      -15	--------------------------------
      -14	--------------------------------
      -13	--------------------------------
      -12	--------------------------------
      -11	--------------------------------
      -10	--------------------------------
       -9	-------------------------XX-----
       -8	------------------------XXX-----
       -7	-----------------------XXX------
       -6	----------------------XXX-------
       -5	---------------------XXX--------
       -4	--------------------XXX---------
       -3	-------------------XXX----------
       -2	------------------XXX-----------
       -1	-----------------XXX------------
        0	----------------XXX-------------
        0	----------------XX--------------
        1	--------------------------------
        2	--------------------------------
        3	--------------------------------
        4	--------------------------------
        5	--------------------------------
        6	--------------------------------
        7	--------------------------------
        8	--------------------------------
        9	--------------------------------
       10	--------------------------------
       11	--------------------------------
       12	--------------------------------
       13	--------------------------------
       14	--------------------------------
       15	--------------------------------
	*/
}


func ExampleSVGDozer() {
	b := Brush{LineBrush:LineBrush{2*unitX, unitY}, Relative: true}
	p:=b.Box(5*unitX,5*unitX)
	Output(Limiter{p,15*unitX})
	/* Output:
Graph
      -15	--------------------------------
      -14	--------------------------------
      -13	--------------------------------
      -12	--------------------------------
      -11	--------------------------------
      -10	--------------------------------
       -9	-------------------------XX-----
       -8	------------------------XXX-----
       -7	-----------------------XXX------
       -6	----------------------XXX-------
       -5	---------------------XXX--------
       -4	--------------------XXX---------
       -3	-------------------XXX----------
       -2	------------------XXX-----------
       -1	-----------------XXX------------
        0	----------------XXX-------------
        0	----------------XX--------------
        1	--------------------------------
        2	--------------------------------
        3	--------------------------------
        4	--------------------------------
        5	--------------------------------
        6	--------------------------------
        7	--------------------------------
        8	--------------------------------
        9	--------------------------------
       10	--------------------------------
       11	--------------------------------
       12	--------------------------------
       13	--------------------------------
       14	--------------------------------
       15	--------------------------------
	*/
}





