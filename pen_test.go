package patterns

//import "fmt"


func ExamplePenLine() {
	p := Pen{Nib:Facetted{unitX, unitY,3}}
	Output(p.Line(0, 0, 5*unitX, 5*unitX),unitX)
	/* Output:
Graph
       -7	---------------
       -6	---------------
       -5	---------------
       -4	---------------
       -3	---------------
       -2	---------------
       -1	---------------
        0	---------------
        0	--------X------
        1	---------X-----
        2	----------X----
        3	-----------X---
        4	------------X--
        5	---------------
        6	---------------
	*/
}

func ExamplePenLineNonZeroStart() {
	p := Pen{Nib:Facetted{unitX, unitY,3}, Relative: true}
	Output(p.Line(5*unitX, -5*unitX, -10*unitX, 10*unitX),unitX)
	/* Output:
Graph
      -14	-----------------------------
      -13	-----------------------------
      -12	-----------------------------
      -11	-----------------------------
      -10	-----------------------------
       -9	-----------------------------
       -8	-----------------------------
       -7	-----------------------------
       -6	-----------------------------
       -5	-------------------X---------
       -4	------------------X----------
       -3	-----------------X-----------
       -2	----------------X------------
       -1	---------------X-------------
        0	--------------X--------------
        0	-------------X---------------
        1	------------X----------------
        2	-----------X-----------------
        3	----------X------------------
        4	---------X-------------------
        5	--------X--------------------
        6	-------X---------------------
        7	------X----------------------
        8	-----X-----------------------
        9	----X------------------------
       10	-----------------------------
       11	-----------------------------
       12	-----------------------------
       13	-----------------------------
	*/
}


func ExamplePenLineCross() {
	p := Pen{Nib:Facetted{unitX, unitY,3}}
	Output(
		Limiter{
			Composite{
				p.Line(-5*unitX,0, -10*unitX, 0),
				p.Line(5*unitX,0, 10*unitX, 0),
				p.Line(0,-5*unitX,0, -10*unitX),
				p.Line(0,5*unitX,0, 10*unitX),
			},
			12*unitX,
		},
		unitX,
	)
	/* Output:
Graph
      -13	---------------------------
      -12	---------------------------
      -11	---------------------------
      -10	-------------X-------------
       -9	-------------X-------------
       -8	-------------X-------------
       -7	-------------X-------------
       -6	-------------X-------------
       -5	---------------------------
       -4	---------------------------
       -3	---------------------------
       -2	---------------------------
       -1	---------------------------
        0	---XXXXX-----------XXXX----
        1	---------------------------
        2	---------------------------
        3	---------------------------
        4	---------------------------
        5	---------------------------
        6	-------------X-------------
        7	-------------X-------------
        8	-------------X-------------
        9	-------------X-------------
       10	---------------------------
       11	---------------------------
       12	---------------------------
       13	---------------------------
	*/
}



func ExampleBrushPolygon() {
	p := Facetted{unitX, unitY,3}
	Output(Limiter{p.Polygon([2]x{0, 5*unitX}, [2]x{7*unitX, -7*unitX},[2]x{-10*unitX, 5*unitX}),10*unitX},unitX)
	/* Output:
Graph
      -11	-----------------------
      -10	-----------------------
       -9	-----------------------
       -8	-----------------------
       -7	------------------X----
       -6	----------------XX-----
       -5	---------------XXX-----
       -4	-------------XX-X------
       -3	------------XX--X------
       -2	-----------X---X-------
       -1	---------XX---XX-------
        0	--------X-----X--------
        1	------XX-----X---------
        2	-----XX------X---------
        3	---XX-------X----------
        4	--XX--------X----------
        5	-XXXXXXXXXXX-----------
        6	-----------------------
        7	-----------------------
        8	-----------------------
        9	-----------------------
       10	-----------------------
       11	-----------------------
	*/
}

//func ExampleBrushQuadraticBezier() {
//	b := Brush{PenStyle:Facet{2.1*unitX, unitY,3}, Relative: true}
//	p := b.QuadraticBezier(0,0,7*unitX,-7*unitX,-10*unitX,0)
//	Output(Limiter{p,10*unitX})
//	/* Output:
//Graph
//      -15	--------------------------------
//      -14	--------------------------------
//      -13	--------------------------------
//      -12	--------------------------------
//      -11	--------------------------------
//      -10	--------------------------------
//       -9	-------------------------XX-----
//       -8	------------------------XXX-----
//       -7	-----------------------XXX------
//       -6	----------------------XXX-------
//       -5	---------------------XXX--------
//       -4	--------------------XXX---------
//       -3	-------------------XXX----------
//       -2	------------------XXX-----------
//       -1	-----------------XXX------------
//        0	----------------XXX-------------
//        0	----------------XX--------------
//        1	--------------------------------
//        2	--------------------------------
//        3	--------------------------------
//        4	--------------------------------
//        5	--------------------------------
//        6	--------------------------------
//        7	--------------------------------
//        8	--------------------------------
//        9	--------------------------------
//       10	--------------------------------
//       11	--------------------------------
//       12	--------------------------------
//       13	--------------------------------
//       14	--------------------------------
//       15	--------------------------------
//	*/
//}


//func ExampleBrushCubicBezier() {
//	b := Brush{PenStyle:Facet{8.1*unitX, unitY,3}, Relative: true}
//	p := b.CubicBezier(0,50*unitX,40*unitX,-40*unitX,-40*unitX,-20*unitX,-50*unitX,0)
//	Output(Limiter{p,50*unitX})
//	/* Output:
//Graph
//      -15	--------------------------------
//      -14	--------------------------------
//      -13	--------------------------------
//      -12	--------------------------------
//      -11	--------------------------------
//      -10	--------------------------------
//       -9	-------------------------XX-----
//       -8	------------------------XXX-----
//       -7	-----------------------XXX------
//       -6	----------------------XXX-------
//       -5	---------------------XXX--------
//       -4	--------------------XXX---------
//       -3	-------------------XXX----------
//       -2	------------------XXX-----------
//       -1	-----------------XXX------------
//        0	----------------XXX-------------
//        0	----------------XX--------------
//        1	--------------------------------
//        2	--------------------------------
//        3	--------------------------------
//        4	--------------------------------
//        5	--------------------------------
//        6	--------------------------------
//        7	--------------------------------
//        8	--------------------------------
//        9	--------------------------------
//       10	--------------------------------
//       11	--------------------------------
//       12	--------------------------------
//       13	--------------------------------
//       14	--------------------------------
//       15	--------------------------------
//	*/
//}


//func ExampleSVGDozer() {
//	b := Brush{PenStyle:Facet{2*unitX, unitY,3}, Relative: true}
//	p:=b.Box(5*unitX,5*unitX)
//	Output(Limiter{p,15*unitX})
//	/* Output:
//Graph
//      -15	--------------------------------
//      -14	--------------------------------
//      -13	--------------------------------
//      -12	--------------------------------
//      -11	--------------------------------
//      -10	--------------------------------
//       -9	-------------------------XX-----
//       -8	------------------------XXX-----
//       -7	-----------------------XXX------
//       -6	----------------------XXX-------
//       -5	---------------------XXX--------
//       -4	--------------------XXX---------
//       -3	-------------------XXX----------
//       -2	------------------XXX-----------
//       -1	-----------------XXX------------
//        0	----------------XXX-------------
//        0	----------------XX--------------
//        1	--------------------------------
//        2	--------------------------------
//        3	--------------------------------
//        4	--------------------------------
//        5	--------------------------------
//        6	--------------------------------
//        7	--------------------------------
//        8	--------------------------------
//        9	--------------------------------
//       10	--------------------------------
//       11	--------------------------------
//       12	--------------------------------
//       13	--------------------------------
//       14	--------------------------------
//       15	--------------------------------
//	*/
//}





